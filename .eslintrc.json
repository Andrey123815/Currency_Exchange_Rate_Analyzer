{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:eslint-comments/recommended",
        "plugin:react/recommended",
        "airbnb",
        "eslint-config-prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "import",
        "eslint-plugin-prettier"
    ],
    "rules": {
        // turn on errors for missing imports
        "import/no-unresolved": "error",
//        "@typescript-eslint/restrict-template-expressions": "error",
        "react/jsx-filename-extension": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-throw-literal": "off",
        "@typescript-eslint/no-shadow": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/consistent-type-imports": "error",

        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],

        "prettier/prettier": ["error"],
        "no-continue": "off",
        "default-case": "off",
        "react/prop-types": "off",
        "no-restricted-syntax": "off",
        "no-restricted-globals": "off",
        "eslint-comments/no-unlimited-disable": "warn",
        "consistent-return": "off",
        "curly": ["error", "all"],
        "prefer-promise-reject-errors": "off",
        "no-plusplus": "off",
        "react/no-unknown-property": ["error", { "ignore": ["stroke-width", "stroke-linecap"] }],
        "no-alert": "off",
        "no-param-reassign": [
            "error",
            {
                "props": false
            }
        ],
        "react/jsx-no-useless-fragment": "off",
        "react/react-in-jsx-scope": "off",
        "react-hooks/exhaustive-deps": "off",
        "react/no-array-index-key": "warn",
        "react/jsx-props-no-spreading": "off",
        "no-underscore-dangle": "off",
        "react/require-default-props": "off",
        "react/function-component-definition": "off",
        "jsx-a11y/no-autofocus": "warn",
        "jsx-a11y/anchor-has-content": "off",
        "jsx-a11y/no-noninteractive-element-interactions": "off",
        "jsx-a11y/control-has-associated-label": "warn",
        "jsx-a11y/label-has-associated-control": "off",
        "jsx-a11y/no-static-element-interactions": "off",
        "jsx-a11y/click-events-have-key-events": "off",
        "jsx-a11y/anchor-is-valid": "off",
        "import/no-extraneous-dependencies": "off",
        "import/no-cycle": "error",
        "import/order": "off",
        "import/no-named-default": "off",
        "import/prefer-default-export": "off",
        "prefer-destructuring": [
            "error",
            {
                "array": true,
                "object": true
            },
            {
                "enforceForRenamedProperties": false
            }
        ]
    },
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn"t contain any source code, like `@types/unist`

                // Choose from one of the "project" configs below or omit to use <root>/tsconfig.json by default

                // use <root>/path/to/folder/tsconfig.json
                "project": "."
            }
        }
    }
}
